#!/usr/bin/env python3
"""
Script de correction rapide pour les probl√®mes de connexion mobile
"""

import os
import sys
import socket
import subprocess
import platform

def get_local_ip():
    """Obtenir l'adresse IP locale"""
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
        s.close()
        return ip
    except:
        return "127.0.0.1"

def fix_django_settings():
    """Corriger les param√®tres Django pour l'acc√®s mobile"""
    print("üîß Correction des param√®tres Django...")
    
    settings_file = "arbitrage_project/settings.py"
    
    try:
        # Lire le fichier settings
        with open(settings_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # V√©rifier et corriger ALLOWED_HOSTS
        if "ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0', '192.168.1.101', '*']" in content:
            print("‚úÖ ALLOWED_HOSTS d√©j√† configur√© correctement")
        else:
            # Remplacer la ligne ALLOWED_HOSTS
            import re
            pattern = r"ALLOWED_HOSTS = \[.*?\]"
            replacement = "ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0', '192.168.1.101', '*']"
            
            if re.search(pattern, content):
                content = re.sub(pattern, replacement, content)
                
                # √âcrire le fichier modifi√©
                with open(settings_file, 'w', encoding='utf-8') as f:
                    f.write(content)
                
                print("‚úÖ ALLOWED_HOSTS corrig√©")
            else:
                print("‚ö†Ô∏è ALLOWED_HOSTS non trouv√©, ajout manuel n√©cessaire")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la correction des param√®tres: {e}")
        return False

def start_server_mobile():
    """D√©marrer le serveur pour l'acc√®s mobile"""
    print("üöÄ D√©marrage du serveur pour mobile...")
    
    ip = get_local_ip()
    
    print(f"üåê Adresse IP locale: {ip}")
    print(f"üîó URL pour mobile: http://{ip}:8000")
    
    print("\nüì± Instructions:")
    print("1. Ouvrez le navigateur de votre t√©l√©phone")
    print(f"2. Tapez: http://{ip}:8000")
    print("3. V√©rifiez que la page se charge")
    
    print("\nüîß Si √ßa ne marche pas:")
    print("1. V√©rifiez que le t√©l√©phone et l'ordinateur sont sur le m√™me WiFi")
    print("2. D√©sactivez temporairement le pare-feu")
    print("3. Red√©marrez le routeur")
    
    try:
        # D√©marrer le serveur
        cmd = [sys.executable, 'manage.py', 'runserver', '0.0.0.0:8000']
        subprocess.run(cmd, check=True)
        
    except KeyboardInterrupt:
        print("\nüõë Serveur arr√™t√©")
    except Exception as e:
        print(f"‚ùå Erreur lors du d√©marrage: {e}")

def test_connection():
    """Tester la connexion"""
    print("üîç Test de connexion...")
    
    ip = get_local_ip()
    
    try:
        import requests
        
        # Test local
        try:
            response = requests.get("http://localhost:8000/api/", timeout=5)
            print("‚úÖ Serveur accessible en local")
        except:
            print("‚ùå Serveur non accessible en local")
            return False
        
        # Test avec l'IP locale
        try:
            response = requests.get(f"http://{ip}:8000/api/", timeout=5)
            print(f"‚úÖ Serveur accessible via IP locale: {ip}")
        except:
            print(f"‚ùå Serveur non accessible via IP locale: {ip}")
            return False
        
        return True
        
    except ImportError:
        print("‚ö†Ô∏è Module requests non disponible, test manuel n√©cessaire")
        return True
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")
        return False

def main():
    """Fonction principale"""
    print("üèÅ Correction des probl√®mes de connexion mobile")
    print("=" * 60)
    
    # Changer vers le dossier backend
    os.chdir('backend')
    
    # Correction des param√®tres
    fix_django_settings()
    
    # Test de connexion
    test_connection()
    
    # D√©marrage du serveur
    start_server_mobile()

if __name__ == "__main__":
    main()


