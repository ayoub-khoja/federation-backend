# Generated by Django 4.2.7 on 2025-08-29 10:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Arbitre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=13,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Le numéro doit être au format: '+21612345678'",
                                regex="^\\+216[0-9]{8}$",
                            )
                        ],
                        verbose_name="Numéro de téléphone",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Adresse email",
                    ),
                ),
                ("first_name", models.CharField(max_length=50, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=50, verbose_name="Nom")),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="Adresse"),
                ),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("national", "Arbitre National"),
                            ("federal", "Arbitre Fédéral"),
                            ("international", "Arbitre International"),
                            ("fifa", "Arbitre FIFA"),
                        ],
                        default="national",
                        max_length=20,
                        verbose_name="Grade",
                    ),
                ),
                (
                    "league",
                    models.CharField(
                        choices=[
                            ("ligue1", "Ligue 1 Professionnelle"),
                            ("ligue2", "Ligue 2 Professionnelle"),
                            ("amateur", "Ligue Nationale Amateur"),
                            ("regional", "Ligue Régionale"),
                        ],
                        default="amateur",
                        max_length=20,
                        verbose_name="Ligue",
                    ),
                ),
                (
                    "license_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Numéro de licence",
                    ),
                ),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profiles/",
                        verbose_name="Photo de profil",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'inscription"
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Compte actif"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Membre du staff"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Compte vérifié"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Arbitre",
                "verbose_name_plural": "Arbitres",
                "ordering": ["-date_joined"],
            },
        ),
    ]
