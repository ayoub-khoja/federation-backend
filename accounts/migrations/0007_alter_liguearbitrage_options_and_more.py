# Generated by Django 4.2.7 on 2025-08-30 13:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("accounts", "0006_alter_arbitre_options_remove_arbitre_user_type_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="liguearbitrage",
            options={
                "ordering": ["nom"],
                "verbose_name": "Ligue d'arbitrage",
                "verbose_name_plural": "Ligues d'arbitrage",
            },
        ),
        migrations.RenameField(
            model_name="liguearbitrage",
            old_name="active",
            new_name="is_active",
        ),
        migrations.RemoveField(
            model_name="arbitre",
            name="is_verified",
        ),
        migrations.RemoveField(
            model_name="arbitre",
            name="license_number",
        ),
        migrations.RemoveField(
            model_name="arbitre",
            name="ligue_arbitrage",
        ),
        migrations.RemoveField(
            model_name="arbitre",
            name="niveau_competition",
        ),
        migrations.RemoveField(
            model_name="arbitre",
            name="profile_photo",
        ),
        migrations.RemoveField(
            model_name="liguearbitrage",
            name="code",
        ),
        migrations.RemoveField(
            model_name="liguearbitrage",
            name="ordre",
        ),
        migrations.AddField(
            model_name="arbitre",
            name="cin",
            field=models.CharField(
                blank=True,
                max_length=20,
                null=True,
                unique=True,
                verbose_name="Numéro CIN",
            ),
        ),
        migrations.AddField(
            model_name="arbitre",
            name="ligue",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="accounts.liguearbitrage",
                verbose_name="Ligue d'arbitrage",
            ),
        ),
        migrations.AddField(
            model_name="liguearbitrage",
            name="description",
            field=models.TextField(blank=True, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="email",
            field=models.EmailField(
                blank=True, max_length=254, null=True, verbose_name="Adresse email"
            ),
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="grade",
            field=models.CharField(
                choices=[
                    ("debutant", "Débutant"),
                    ("regional", "Régional"),
                    ("national", "National"),
                    ("international", "International"),
                ],
                default="debutant",
                max_length=20,
                verbose_name="Grade",
            ),
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to.",
                related_name="arbitre_user_set",
                related_query_name="arbitre_user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="is_superuser",
            field=models.BooleanField(default=False, verbose_name="Super utilisateur"),
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="last_login",
            field=models.DateTimeField(
                auto_now=True,
                default=django.utils.timezone.now,
                verbose_name="Dernière connexion",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="phone_number",
            field=models.CharField(
                max_length=20,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Le numéro de téléphone doit être au format tunisien: +21612345678 ou 21612345678",
                        regex="^(\\+216|216)?[0-9]{8}$",
                    )
                ],
                verbose_name="Numéro de téléphone",
            ),
        ),
        migrations.AlterField(
            model_name="arbitre",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="arbitre_user_set",
                related_query_name="arbitre_user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterField(
            model_name="liguearbitrage",
            name="nom",
            field=models.CharField(max_length=100, verbose_name="Nom de la ligue"),
        ),
        migrations.AlterField(
            model_name="liguearbitrage",
            name="region",
            field=models.CharField(max_length=100, verbose_name="Région"),
        ),
        migrations.CreateModel(
            name="Commissaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Le numéro de téléphone doit être au format tunisien: +21612345678 ou 21612345678",
                                regex="^(\\+216|216)?[0-9]{8}$",
                            )
                        ],
                        verbose_name="Numéro de téléphone",
                    ),
                ),
                ("first_name", models.CharField(max_length=50, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=50, verbose_name="Nom")),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Adresse email",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "birth_place",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Lieu de naissance",
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="Adresse"),
                ),
                (
                    "cin",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Numéro CIN",
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("debutant", "Débutant"),
                            ("regional", "Régional"),
                            ("national", "National"),
                            ("international", "International"),
                        ],
                        default="debutant",
                        max_length=20,
                        verbose_name="Grade",
                    ),
                ),
                (
                    "specialite",
                    models.CharField(
                        choices=[
                            ("commissaire_match", "Commissaire de Match"),
                            ("delegue_technique", "Délégué Technique"),
                            ("observateur", "Observateur"),
                            ("superviseur", "Superviseur"),
                        ],
                        default="commissaire_match",
                        max_length=50,
                        verbose_name="Spécialité",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Compte actif"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Membre du staff"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, verbose_name="Super utilisateur"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'inscription"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière connexion"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="commissaire_user_set",
                        related_query_name="commissaire_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "ligue",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.liguearbitrage",
                        verbose_name="Ligue d'arbitrage",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="commissaire_user_set",
                        related_query_name="commissaire_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Commissaire",
                "verbose_name_plural": "Commissaires",
                "ordering": ["-date_joined"],
            },
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Le numéro de téléphone doit être au format tunisien: +21612345678 ou 21612345678",
                                regex="^(\\+216|216)?[0-9]{8}$",
                            )
                        ],
                        verbose_name="Numéro de téléphone",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Adresse email"
                    ),
                ),
                ("first_name", models.CharField(max_length=50, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=50, verbose_name="Nom")),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("super_admin", "Super Administrateur"),
                            ("moderateur", "Modérateur"),
                        ],
                        default="admin",
                        max_length=20,
                        verbose_name="Type d'utilisateur",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Département"
                    ),
                ),
                (
                    "position",
                    models.CharField(blank=True, max_length=100, verbose_name="Poste"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Compte actif"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=True, verbose_name="Membre du staff"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, verbose_name="Super administrateur"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'inscription"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière connexion"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="admin_user_set",
                        related_query_name="admin_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="admin_user_set",
                        related_query_name="admin_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Administrateur",
                "verbose_name_plural": "Administrateurs",
                "ordering": ["-date_joined"],
            },
        ),
    ]
